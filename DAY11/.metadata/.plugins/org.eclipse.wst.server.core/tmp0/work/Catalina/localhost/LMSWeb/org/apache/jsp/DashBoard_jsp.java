/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2023-10-23 17:39:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.java.infinite.LeaveDetails;
import com.java.infinite.LeaveDetailsDAOImpl;
import com.java.infinite.LeaveDetailsDAO;
import com.java.infinite.Employee;
import com.java.infinite.EmployeeDAOImpl;
import com.java.infinite.EmployeeDAO;

public final class DashBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.java.infinite.LeaveDetails");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.java.infinite.Employee");
    _jspx_imports_classes.add("com.java.infinite.EmployeeDAOImpl");
    _jspx_imports_classes.add("com.java.infinite.LeaveDetailsDAOImpl");
    _jspx_imports_classes.add("com.java.infinite.LeaveDetailsDAO");
    _jspx_imports_classes.add("com.java.infinite.EmployeeDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("    table {\r\n");
      out.write("        border-collapse: collapse;\r\n");
      out.write("        width: 90%;\r\n");
      out.write("        margin: 20px auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        padding: 12px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("        background-color: #4CAF50; /* Green */\r\n");
      out.write("        color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:nth-child(even) {\r\n");
      out.write("        background-color: #E0E0E0; /* Light Gray */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    a {\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        background-color: #3498db; /* Blue */\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        padding: 8px 16px;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        transition: background-color 0.3s ease; /* Smooth background color transition */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    a:hover {\r\n");
      out.write("        background-color: #258cd1; /* Darker Blue on Hover */\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t <h1>Leave Application DashBoard</h1>\r\n");
      out.write("\t</center>\r\n");
      out.write("\t<table border=\"3\" align=\"center\" id=\"tab1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t");

				EmployeeDAO dao = new EmployeeDAOImpl();
				int empId = Integer.parseInt(request.getParameter("empId"));
        			session.setAttribute("empId", empId);
				Employee employee = dao.searchEmployeeDao(empId);
			
      out.write("\r\n");
      out.write("\t\t\tEmployee Id : ");
      out.print(employee.getEmpId() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t\tEmployee Name : ");
      out.print(employee.getEmpName() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t\t\tEmployee Email : ");
      out.print(employee.getEmpEmail() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t");

					int mgrId = Integer.parseInt(request.getParameter("mgrId"));
				if (mgrId!=0){
				Employee manager = dao.searchEmployeeDao(mgrId);					
				
      out.write("\r\n");
      out.write("\t\t\t\tManager Id : ");
      out.print(manager.getEmpId() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t\tManager Name : ");
      out.print(manager.getEmpName() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t\t\tManager Email : ");
      out.print(manager.getEmpEmail() );
      out.write(" <br/>\r\n");
      out.write("\t\t\t");
			
				}else{
					out.println("No Manager Found");
				}
			
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<table border=\"3\" align=\"center\">\r\n");
      out.write("\t\t<th>LeaveId</th>\r\n");
      out.write("\t\t<th>EmpId</th>\r\n");
      out.write("\t\t<th>LeaveStartDate</th>\r\n");
      out.write("\t\t<th>LeaveEndDate</th>\r\n");
      out.write("\t\t<th>noOfDays</th>\r\n");
      out.write("\t\t<th>leaveType</th>\r\n");
      out.write("\t\t<th>leaveStatus</th>\r\n");
      out.write("\t\t<th>leaveReason</th>\r\n");
      out.write("\t\t<th>ManagerComments</th>\r\n");
      out.write("\t\t<th>appliedOn</th>\r\n");
      out.write("\t");

	LeaveDetailsDAO obj = new LeaveDetailsDAOImpl();
	List<LeaveDetails> leavelist = obj.showLeaveDao(empId);
	int empid=1;
	if(leavelist!=null){
	for(LeaveDetails leave : leavelist) {
		empid = leave.getEmpId();

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td><br>");
      out.print(leave.getLeaveId() );
      out.write(" <br></td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getEmpId() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveStartDate() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveEndDate() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getNoOfDays() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveType() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveStatus() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveReason() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getManagerComments() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getAppliedOn() );
      out.write(" </td>\r\n");
      out.write("\t</tr>\r\n");

	}
	}else{
		out.println("No Leave Found");
	}
	
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br><br>\r\n");
      out.write("\t<center>\r\n");
      out.write("\t<a href=\"ApplyLeave.jsp?empid=");
      out.print(employee.getEmpId());
      out.write("\" class=\"button\">Apply Leave</a>\r\n");
      out.write("\t");

	LeaveDetailsDAO dao1 = new LeaveDetailsDAOImpl();
	List<LeaveDetails> searchleavelist = dao1.showPendingLeaveDao(empid);

      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("<center>\r\n");
      out.write("<table border=\"3\" align=\"center\">\r\n");
      out.write("\t\t<center>\r\n");
      out.write("\t\t  \t<h2>Reporting Employ LeaveApplication Section</h2>\r\n");
      out.write("\t\t</center>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t\t<th>LeaveId</th>\r\n");
      out.write("\t\t\t<th>EmpId</th>\r\n");
      out.write("\t\t\t<th>LeaveStartDate</th>\r\n");
      out.write("\t\t\t<th>LeaveEndDate</th>\r\n");
      out.write("\t\t\t<th>noOfDays</th>\r\n");
      out.write("\t\t\t<th>leaveType</th>\r\n");
      out.write("\t\t\t<th>leaveStatus</th>\r\n");
      out.write("\t\t\t<th>leaveReason</th>\r\n");
      out.write("\t\t\t<th>ManagerComments</th>\r\n");
      out.write("\t\t\t<th>appliedOn</th>\r\n");
      out.write("\t\t\t<th>Approve/Deny</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");

		if (searchleavelist.isEmpty()) {
	
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"12\"><h2>No leave found</h2></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");

		} else {
			for(LeaveDetails leave : searchleavelist) {
	
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td><br>");
      out.print(leave.getLeaveId() );
      out.write("  <br></td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getEmpId() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveStartDate() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveEndDate() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getNoOfDays() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveType() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveStatus() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getLeaveReason() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getManagerComments() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>");
      out.print(leave.getAppliedOn() );
      out.write(" </td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<a href=\"ApproveDeny.jsp?leaveId=");
      out.print(leave.getLeaveId() );
      out.write("\" class=\"button\">Approve/Deny</a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");
	
			}
		}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
